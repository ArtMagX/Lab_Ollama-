/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.allaybotai;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.FilenameFilter;
import java.io.IOException;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.json.JSONObject;

/**
 *
 * @author jez
 */
public class AllayBot extends javax.swing.JFrame {

    /**
     * Creates new form AllayBot
     */
    public AllayBot() {
        initComponents();
        cargarChats();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ChatHistory = new javax.swing.JList<>();
        NuevoChat = new javax.swing.JButton();
        MostrarHistorial = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        InputText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Dialogos = new javax.swing.JTextArea();
        EnviarButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        LimpiarChat = new javax.swing.JButton();
        Indicador = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setText("ALLAY");

        jLabel3.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("BOT");

        jPanel1.setBackground(new java.awt.Color(40, 40, 40));

        ChatHistory.setFont(new java.awt.Font("SF Pro Display", 0, 14)); // NOI18N
        ChatHistory.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ChatHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChatHistoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ChatHistory);

        NuevoChat.setText("Nuevo Chat");
        NuevoChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NuevoChatMouseClicked(evt);
            }
        });

        MostrarHistorial.setText("Ocultar Historial");
        MostrarHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MostrarHistorialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(NuevoChat, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addComponent(MostrarHistorial, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MostrarHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NuevoChat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(40, 40, 40));

        InputText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InputTextKeyPressed(evt);
            }
        });

        Dialogos.setColumns(20);
        Dialogos.setRows(5);
        jScrollPane1.setViewportView(Dialogos);

        EnviarButton.setText("Enviar");
        EnviarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnviarButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InputText, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EnviarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnviarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        LimpiarChat.setText("Limpiar Chat");
        LimpiarChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LimpiarChatMouseClicked(evt);
            }
        });

        Indicador.setForeground(new java.awt.Color(241, 241, 241));
        Indicador.setText("Allay 3.2");
        Indicador.setToolTipText("Estas usando la version 3.2 de Allay");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Indicador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LimpiarChat)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LimpiarChat, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Indicador, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void EnviarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnviarButtonMouseClicked
        String promptText = InputText.getText();
        Dialogos.append("[Yo] Tu: " + promptText + "\n");
        enviarSolicitudIA();
    }//GEN-LAST:event_EnviarButtonMouseClicked

    private void NuevoChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NuevoChatMouseClicked
        String chatContent = Dialogos.getText();
        guardarChat(chatContent);
        Dialogos.setText("");
        cargarChats();
    }//GEN-LAST:event_NuevoChatMouseClicked

    private void ChatHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChatHistoryMouseClicked
        if (evt.getClickCount() == 2) {
            int index = ChatHistory.locationToIndex(evt.getPoint());
            if (index >= 0) {
                String selectedChatName = ChatHistory.getModel().getElementAt(index);
                cargarChat(selectedChatName);
            }
        }
    }//GEN-LAST:event_ChatHistoryMouseClicked

    private void LimpiarChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LimpiarChatMouseClicked
        Dialogos.setText("");
    }//GEN-LAST:event_LimpiarChatMouseClicked

    private void MostrarHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MostrarHistorialMouseClicked
        if (ChatHistory.isVisible()) {
            MostrarHistorial.setText("Mostrar Historial");
            ChatHistory.setVisible(false);
        } else {
            MostrarHistorial.setText("Ocultar Historial");
            ChatHistory.setVisible(true);
        }
    }//GEN-LAST:event_MostrarHistorialMouseClicked

    private void InputTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InputTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String promptText = InputText.getText();
            Dialogos.append("[Yo] Tu: " + promptText + "\n");
            enviarSolicitudIA();
        }
    }//GEN-LAST:event_InputTextKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllayBot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllayBot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllayBot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllayBot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllayBot().setVisible(true);
            }
        });
    }

    public static void wait(int ms) {
        try {
            Thread.sleep(ms);
        } catch (InterruptedException ex) {
            Thread.currentThread().interrupt();
        }
    }

    private void cargarChat(String chatName) {
        try {
            String filePath = chatDirectory + chatName;

            String content = new String(Files.readAllBytes(Paths.get(filePath)), StandardCharsets.UTF_8);
            String[] lineasChat = content.split("\n");

            StringBuilder chatTexto = new StringBuilder();
            for (String linea : lineasChat) {
                chatTexto.append(linea).append("\n");
            }

            Dialogos.setText(chatTexto.toString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar el chat: " + e.getMessage());
        }
    }

    private void enviarSolicitudIA() {
        //variables para el modelo
        String nombremodelo = "llama3.2";
        String texto = InputText.getText();
        //Evitar crahseos cuando se manda un mensaje con comillas ""
        texto = texto.replace("\"", "´").replace("\"", "´").replace("'", "´").replace("'", "´");
        String promptText = texto;

        try {
            URL url = new URL("http://localhost:11434/api/generate");
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json; utf-8");
            conn.setRequestProperty("Accept", "application/json");
            conn.setDoOutput(true);

            String jsonInputString = String.format(
                    "{\"model\": \"%s\", \"prompt\": \"%s\", \"stream\": false}", nombremodelo, promptText
            );

            try (OutputStream os = conn.getOutputStream()) {
                byte[] input = jsonInputString.getBytes(StandardCharsets.UTF_8);
                os.write(input, 0, input.length);
            }

            int code = conn.getResponseCode();
            System.out.println("Codigo de respuesta: " + code);

            if (code == 404) {
                System.out.println("El recurso solicitado no fue encontrado (404). Verifica el endpoint y el servidor.");
            } else {
                BufferedReader in = new BufferedReader(new java.io.InputStreamReader(conn.getInputStream(), StandardCharsets.UTF_8));
                StringBuilder response = new StringBuilder();
                String line;
                while ((line = in.readLine()) != null) {
                    response.append(line);
                }
                in.close();

                //imprimir la respuesta
                System.out.println("Response body " + response.toString());
                JSONObject jsonResponse = new JSONObject(response.toString());
                String responseText = jsonResponse.getString("response");
                Dialogos.append("[AI] Allay Bot: " + responseText + "\n");
                InputText.setText("");
            }

            //cerrar la conexión
            conn.disconnect();

        } catch (MalformedURLException e) {
            System.out.println("La URL es inválida: " + e.getMessage());
        } catch (IOException e) {
            System.out.println("Error de conexión: " + e.getMessage());
        }
    }

    private final String chatDirectory = "/home/jez/NetBeansProjects/AllayBotAI/src/main/java/Chats/";

    private void guardarChat(String contenido) {
        try {
            // El contenido sera para cada linea
            String[] lineas = contenido.split("\n");

            // Crear la matriz
            Object[][] matrizDeChat = new Object[lineas.length][1];

            for (int i = 0; i < lineas.length; i++) {
                matrizDeChat[i][0] = lineas[i];
            }

            // Nombre del archivo con la extension de allay porque aja
            String fileName = chatDirectory + "chat_" + System.currentTimeMillis() + ".allay";
            FileWriter writer = new FileWriter(fileName);

            // Guardar en el archivo
            for (Object[] fila : matrizDeChat) {
                writer.write(fila[0] + "\n");
            }

            writer.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el chat: " + e.getMessage());
        }
    }

    private void cargarChats() {
        File dir = new File(chatDirectory);

        if (!dir.exists() || !dir.isDirectory()) {
            JOptionPane.showMessageDialog(this, "Directorio de chats no encontrado.");
            return;
        }

        File[] chats = dir.listFiles((dir1, name) -> name.endsWith(".allay"));

        if (chats != null && chats.length > 0) {
            // Crear la matriz
            Object[][] matrizChats = new Object[chats.length][2];

            // Llenar la matriz
            for (int i = 0; i < chats.length; i++) {
                matrizChats[i][0] = i + 1;
                matrizChats[i][1] = chats[i].getName();
            }

            DefaultListModel<String> model = new DefaultListModel<>();
            for (Object[] fila : matrizChats) {
                model.addElement(fila[1].toString());
            }
            ChatHistory.setModel(model);

        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron archivos de chat.");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ChatHistory;
    private javax.swing.JTextArea Dialogos;
    private javax.swing.JButton EnviarButton;
    private javax.swing.JLabel Indicador;
    private javax.swing.JTextField InputText;
    private javax.swing.JButton LimpiarChat;
    private javax.swing.JButton MostrarHistorial;
    private javax.swing.JButton NuevoChat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
